@using EPiServer.Shell
@using Tuohy.Epi.Docs.Controllers
@using Tuohy.Epi.Docs.Models
@model Tuohy.Epi.Docs.Models.ViewModels.ContentTypeViewModel
@{
    Layout = "~/modules/Tuohy.Epi.Docs/Views/Shared/Layouts/_DocumentationLayoutPage.cshtml";
}
@{
    var logoUrl = Model.PageDesign != null && !string.IsNullOrWhiteSpace(Model.PageDesign.LogoUrl)
            ? Model.PageDesign.LogoUrl :
            Paths.ToClientResource(typeof(DocumentationController), "ClientResources/images/dt-logo.png");
    if (Model.PageDesign != null)
    {
        if (!string.IsNullOrWhiteSpace(Model.PageDesign.PriamryColour))
        {
            <style type="text/css">
                .primary-colour {
                    background-color: @Model.PageDesign.PriamryColour
                }
            </style>
        }
        if (!string.IsNullOrWhiteSpace(Model.PageDesign.SecondaryColour))
        {
            <style type="text/css">
                .secondary-colour {
                    background-color: @Model.PageDesign.SecondaryColour
                }
                .heading {
                    border-bottom: 5px solid @Model.PageDesign.SecondaryColour;
                }
            </style>
        }
        if (!string.IsNullOrWhiteSpace(Model.PageDesign.TextColour))
        {
            <style type="text/css">
                .text-colour *{
                    color: @Model.PageDesign.TextColour
                }
            </style>
        }
    }
}

<ul id="slide-out" class="side-nav fixed content-types">
    <li class="logo">
        <a id="logo-container" href="." class="brand-logo">
            <img id="front-page-logo" src="@logoUrl" alt="Logo" />
        </a>
    </li>
    <li class="no-padding">
        <ul class="collapsible collapsible-accordion">
            <li>
                <a class="collapsible-header">Pages<i class="material-icons">arrow_drop_down</i></a>
                <div class="collapsible-body">
                    <ul>
                        @if (Model.Pages != null)
                        {
                            foreach (var page in Model.Pages)
                            {
                                <li><a class="content-type" href="@Paths.ToResource(typeof(DocumentationController), "documentation?id=" + page.Key)">@page.Value</a></li>
                            }
                        }
                    </ul>
                </div>
            </li>
        </ul>
    </li>
    <li class="no-padding">
        <ul class="collapsible collapsible-accordion">
            <li>
                <a class="collapsible-header">Blocks<i class="material-icons">arrow_drop_down</i></a>
                <div class="collapsible-body">
                    <ul>
                        @if (Model.Blocks != null)
                        {
                            foreach (var block in Model.Blocks)
                            {
                                <li><a class="content-type" href="@Paths.ToResource(typeof(DocumentationController), "documentation?id=" + block.Key)">@block.Value</a></li>
                            }
                        }
                    </ul>
                </div>
            </li>
        </ul>
    </li>
    <li class="no-padding">
        <ul class="collapsible collapsible-accordion">
            <li>
                <a class="collapsible-header">Media<i class="material-icons">arrow_drop_down</i></a>
                <div class="collapsible-body">
                    <ul>
                        @if (Model.Media != null)
                        {
                            foreach (var media in Model.Media)
                            {
                                <li><a class="content-type" href="@Paths.ToResource(typeof(DocumentationController), "documentation?id=" + media.Key)">@media.Value</a></li>
                            }
                        }
                    </ul>
                </div>
            </li>
        </ul>
    </li>
    <li class="no-padding">
        <ul class="collapsible collapsible-accordion">
            <li>
                <a class="collapsible-header">Jobs<i class="material-icons">arrow_drop_down</i></a>
                <div class="collapsible-body">
                    <ul>
                        @if (Model.Jobs != null)
                        {
                            foreach (var job in Model.Jobs)
                            {
                                <li><a class="content-type" href="@Paths.ToResource(typeof(DocumentationController), "documentation/job?id=" + job.Key)">>@job.Value</a></li>
                            }
                        }
                    </ul>
                </div>
            </li>
        </ul>
    </li>
</ul>
<main>
    <div class="heading primary-colour text-colour">
        <h1>@Model.FocusedContentTypeDoc.Name</h1>
    </div>
    @if (Model.FocusedContentTypeDoc != null)
    {
        <div class="doc-container">
            <div class="document">
                <p class="flow-text">@Model.FocusedContentTypeDoc.Description</p>
                @if (Model.FocusedContentTypeDoc.Type == ContentTypeEnum.Media && !string.IsNullOrWhiteSpace(((MediaDoc) Model.FocusedContentTypeDoc).MediaDescriptors))
                {
                    <p class="flow-text">Valid extensions: @(((MediaDoc) Model.FocusedContentTypeDoc).MediaDescriptors)</p>
                }
                <div class="row">
                    <div class="col s11">
                        <h4>Properties</h4>
                    </div>
                    <div class="col s1">
                        <a class="expander btn-flat"><i class="material-icons">swap_vert</i></a>
                    </div>
                </div>
                <ul class="collapsible" data-collapsible="expandable">
                    @foreach (var prop in Model.FocusedContentTypeDoc.Properties)
                    {
                        <li>
                            <div class="collapsible-header">
                                <span title="Tab" class="badge">@prop.Tab</span>@prop.Name - @prop.Type
                            </div>
                            <div class="collapsible-body">
                                <div>
                                    @if (!string.IsNullOrWhiteSpace(prop.Description))
                                    {
                                        <div class="description">@prop.Description</div>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(prop.DefaultValue))
                                    {
                                        <div class="property">
                                            <span class="name">Default Value:</span>
                                            <span class="value">@prop.DefaultValue</span>
                                        </div>
                                    }
                                    <div class="property">
                                        <span class="name">Required:</span>
                                        <span class="value">@prop.IsRequired</span>
                                    </div>
                                    <div class="property">
                                        <span class="name">Searchable:</span>
                                        <span class="value">@prop.IsSearchable</span>
                                    </div>
                                    @if (prop.CustomAttributes != null && prop.CustomAttributes.Count > 0)
                                    {
                                        foreach (var attribute in prop.CustomAttributes)
                                        {
                                            <span class="property">
                                                <span class="name">@attribute.Key:</span>
                                                <span class="value">@attribute.Value</span>
                                            </span>
                                        }
                                    }
                                    @if (prop.AllowedTypes != null && prop.AllowedTypes.Count > 0)
                                    {
                                        <span class="property">
                                            <span class="name">Allowed types:</span>
                                            <span class="value content-type-links">
                                                @foreach (var allowedType in prop.AllowedTypes)
                                                {
                                                    if (allowedType.Value == "All")
                                                    {
                                                        <span>All</span>
                                                    }
                                                    else
                                                    {
                                                        <a href="@Paths.ToResource(typeof(DocumentationController), "documentation?id=" + allowedType.Key)">@allowedType.Value</a>
                                                    }
                                                }
                                            </span>
                                        </span>
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ul>
                @if (Model.FocusedContentTypeDoc.Type == ContentTypeEnum.Page)
                {
                    var page = Model.FocusedContentTypeDoc as PageDoc;
                    <div class="row">
                        <ul class="col s6 content-type-links collection with-header">
                            <li class="collection-header"><h4>Child Pages Allowed</h4></li>
                            @if (page.AvaliablePages != null)
                            {
                                if (page.AvaliablePages.Count > 0)
                                {
                                    foreach (var p in page.AvaliablePages)
                                    {

                                        <li class="collection-item"><a href="@Paths.ToResource(typeof(DocumentationController), "documentation?id=" + p.Key)">@p.Value</a></li>
                                    }
                                }
                                else
                                {
                                    <li class="collection-item">All</li>
                                }
                            }
                            else
                            {
                                <li class="collection-item">None</li>
                            }
                        </ul>
                        <ul class="col s6 collection with-header">
                            <li class="collection-header"><h4>Access Rights</h4></li>
                            @foreach (var a in page.Access)
                            {
                                <li class="collection-item"><span class="badge">@a.Value</span>@a.Key</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    }
</main>
